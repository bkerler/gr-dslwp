/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(oqpsk_coherent_demod_cc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(aa72b4839a74e420f8a7dab906823a1e)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/dslwp/oqpsk_coherent_demod_cc.h>
// pydoc.h is automatically generated in the build directory
#include <oqpsk_coherent_demod_cc_pydoc.h>

void bind_oqpsk_coherent_demod_cc(py::module& m)
{

    using oqpsk_coherent_demod_cc    = ::gr::dslwp::oqpsk_coherent_demod_cc;


    py::class_<oqpsk_coherent_demod_cc, gr::block, gr::basic_block,
        std::shared_ptr<oqpsk_coherent_demod_cc>>(m, "oqpsk_coherent_demod_cc", D(oqpsk_coherent_demod_cc))

        .def(py::init(&oqpsk_coherent_demod_cc::make),
           py::arg("samples_per_symbol"),
           py::arg("taps"),
           py::arg("opt_point"),
           py::arg("pll"),
           py::arg("pll_loop_bw"),
           py::arg("pll_damping"),
           py::arg("freq_max"),
           py::arg("freq_min"),
           py::arg("dttl"),
           py::arg("dttl_loop_bw"),
           py::arg("dttl_damping"),
           py::arg("max_rate_deviation"),
           py::arg("asm_ignore"),
           D(oqpsk_coherent_demod_cc,make)
        )
        



        ;




}








