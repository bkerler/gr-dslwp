/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(fec_encode_b.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(3fb3bf6d0dc7626137c0f0e664320905)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/dslwp/fec_encode_b.h>
// pydoc.h is automatically generated in the build directory
#include <fec_encode_b_pydoc.h>

void bind_fec_encode_b(py::module& m)
{

    using fec_encode_b    = ::gr::dslwp::fec_encode_b;


    py::class_<fec_encode_b, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<fec_encode_b>>(m, "fec_encode_b", D(fec_encode_b))

        .def(py::init(&fec_encode_b::make),
           py::arg("frame_len"),
           py::arg("preamble_len"),
           py::arg("trailer_len"),
           py::arg("continous"),
           py::arg("padding_zero"),
           py::arg("using_m"),
           py::arg("using_convolutional_code"),
           D(fec_encode_b,make)
        )
        



        ;




}








